trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g newman
  displayName: 'Install Newman'

- script: |
    npm install -g newman-reporter-htmlextra
  displayName: 'Install Newman Reporter HTMLEXTRA'

- script: |
    npm run build
  displayName: 'Build Project'

# Run Newman with StgEnv environment and export report
- script: |
    newman run STG_QARel_Env.postman_collection.json \
      -e StgEnv.postman_environment.json \
      -r htmlextra \
      --reporter-htmlextra-export $(Build.ArtifactStagingDirectory)/newman-report-StgEnv.html
  displayName: 'Run Postman Collection with StgEnv'

# Run Newman with QARelEnv environment and export report
- script: |
    newman run STG_QARel_Env.postman_collection.json \
      -e QARelEnv.postman_environment.json \
      -r htmlextra \
      --reporter-htmlextra-export $(Build.ArtifactStagingDirectory)/newman-report-QARelEnv.html
  displayName: 'Run Postman Collection with QARelEnv'

- script: |
    newman run $(Build.SourcesDirectory)/STG_rfms.postman_collection.json -x -r junit --reporter-junit-export $(Build.ArtifactStagingDirectory)/Results/junit-report.xml
    if [ ! -f $(Build.ArtifactStagingDirectory)/Results/junit-report.xml ]; then
      echo "JUnit report not found!"
      exit 1
    fi
  displayName: 'Run Postman Collection and Check Report'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: 'newman-report'
    publishLocation: 'Container'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/junit-report.xml'
    searchFolder: $(Build.ArtifactStagingDirectory)
